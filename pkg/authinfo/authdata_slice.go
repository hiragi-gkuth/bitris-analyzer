// Generated by: gen
// TypeWriter: slice
// Directive: +gen on *AuthData

package authinfo

import (
	"fmt"
	"sort"
)

// AuthDataSlice is a slice of type *AuthData. Use it where you would use []*AuthData.
type AuthDataSlice []*AuthData

// Where returns a new AuthDataSlice whose elements return true for func. See: http://clipperhouse.github.io/gen/#Where
func (rcv AuthDataSlice) Where(fn func(*AuthData) bool) (result AuthDataSlice) {
	for _, v := range rcv {
		if fn(v) {
			result = append(result, v)
		}
	}
	return result
}

// Max returns max data based on fn
func (rcv AuthDataSlice) Max(fn func(*AuthData) float64) (result AuthData) {
	valueList := make([]float64, 0)
	for _, v := range rcv {
		valueList = append(valueList, fn(v))
	}

	sort.Slice(rcv, func(i, j int) bool { return fn(rcv[i]) < fn(rcv[j]) })

	result = *rcv[0]
	return result
}

// ShowInfo shows data list like sql
func (rcv AuthDataSlice) ShowInfo() {
	fmt.Printf("ID\t\tUser\t\tPassword\tIP\t\tGeo\tAuthtime\tRTT\tAuthAt\n")
	for _, ad := range rcv {
		fmt.Printf("%09d\t%-12s\t%-12s\t%s\t%s\t%.3f\t\t%.3f\t%s\n", ad.ID, ad.User, ad.Password, ad.IP.String(), ad.GeoInfo.Country_short, ad.ActualAuthtime, ad.RTT, ad.AuthAt.String())
	}
}
